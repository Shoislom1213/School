name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-c:
    name: C Code Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Clang-Format
        run: sudo apt install clang-format -y
      - name: Run Clang-Format
        run: |
          find src/ -name "*.c" -o -name "*.h" | xargs clang-format --dry-run --Werror

  lint-python:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install linters
        run: pip install black flake8
      - name: Run linters
        run: |
          black --check ai_module/
          flake8 ai_module/

  build:
    name: Build C project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Compile
        run: |
          mkdir -p build
          gcc -Wall -Wextra -Werror -o build/program src/*.c

  valgrind:
    name: Run Valgrind
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Install Valgrind
        run: sudo apt install valgrind -y
      - name: Run Valgrind
        run: valgrind --leak-check=full --error-exitcode=1 ./build/program < test-ci.txt

  sanitizer:
    name: Run Address & Leak Sanitizer
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Run with ASAN & LSAN
        run: |
          gcc -fsanitize=address,leak -o build/program src/*.c
          ./build/program < test-ci.txt

  ai-test:
    name: AI Module Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install AI dependencies
        run: pip install torch tensorflow onnxruntime pytest
      - name: Run AI Tests
        run: |
          python ai_module/test_model.py
          pytest ai_module/tests/

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Coverage
        run: |
          sudo apt install lcov -y
          gcc --coverage -o build/program src/*.c
          ./build/program < test-ci.txt
          gcov src/*.c
          lcov --capture --directory . --output-file coverage.info
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage.info

  security:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Trivy
        run: |
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/download/v0.52.1/trivy_0.52.1_Linux-64bit.deb -O trivy.deb
          sudo dpkg -i trivy.deb
      - name: Run Trivy on source
        run: |
          trivy fs --scanners vuln src/
          trivy fs --scanners vuln ai_module/
